[{"D:\\Программирование\\Web\\React\\todo-list-b\\src\\reportWebVitals.js":"1","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\TodoList.js":"2","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Todo.js":"3","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\TimePopUp.js":"4","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Form.js":"5","D:\\Программирование\\Web\\React\\todo-list-b\\src\\App.js":"6","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\AddTaskPanel.js":"7","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\TodosSection.js":"8","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\NewTaskForm.js":"9","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\RegularTaskForm.js":"10","D:\\Программирование\\Web\\React\\todo-list-b\\src\\index.js":"11","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Timer.js":"12","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTaskForm.js":"13","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTodoList.js":"14","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTodoPopUp.js":"15","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTodo.js":"16","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Header.js":"17","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Statistics.js":"18","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\MyCalendar.js":"19","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\MyStatistics.js":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":693,"mtime":1609911908096,"results":"23","hashOfConfig":"22"},{"size":4750,"mtime":1609912881015,"results":"24","hashOfConfig":"22"},{"size":1754,"mtime":1608587612453,"results":"25","hashOfConfig":"22"},{"size":1221,"mtime":1606858532875,"results":"26","hashOfConfig":"22"},{"size":5200,"mtime":1609911832525,"results":"27","hashOfConfig":"22"},{"size":3760,"mtime":1608053980584,"results":"28","hashOfConfig":"22"},{"size":601,"mtime":1609911850684,"results":"29","hashOfConfig":"22"},{"size":3702,"mtime":1608658957037,"results":"30","hashOfConfig":"22"},{"size":2793,"mtime":1608656728834,"results":"31","hashOfConfig":"22"},{"size":500,"mtime":499162500000,"results":"32","hashOfConfig":"22"},{"size":729,"mtime":1608588360214,"results":"33","hashOfConfig":"22"},{"size":1546,"mtime":1608586657456,"results":"34","hashOfConfig":"22"},{"size":629,"mtime":1608585767569,"results":"35","hashOfConfig":"22"},{"size":870,"mtime":1608585750288,"results":"36","hashOfConfig":"22"},{"size":1261,"mtime":1608575599889,"results":"37","hashOfConfig":"22"},{"size":1654,"mtime":1609859314245,"results":"38","hashOfConfig":"22"},{"size":513,"mtime":1608684507899,"results":"39","hashOfConfig":"22"},{"size":1505,"mtime":1608685453277,"results":"40","hashOfConfig":"22"},{"size":1739,"mtime":1608686699870,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ihgjaf",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"D:\\Программирование\\Web\\React\\todo-list-b\\src\\reportWebVitals.js",[],["91","92"],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\TodoList.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Todo.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\TimePopUp.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Form.js",[],["93","94"],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\App.js",["95","96","97","98","99","100","101"],"import React, { useState, useEffect } from \"react\"\nimport './App.css';\nimport AddTaskPanel from './components/AddTaskPanel'\nimport TodosSection from \"./components/TodosSection\";\nimport Header from './components/Header'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Statistics from './components/Statistics'\n\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  // const [filteredTodos, setFilteredTodos] = useState([]);\n  const [todayTodos, setTodayTodos] = useState([]);\n  const [tomorrowTodos, setTomorrowTodos] = useState([]);\n  const [nextWeekTodos, setNextWeekTodos] = useState([]);\n  const [laterTodos, setLaterTodos] = useState([]);\n\n  const [uncompletedTodos, setUncompletedTodos] = useState(new Array());\n\n  const filterTodos = () => {\n\n    setTodayTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        return delta == 0;\n      }\n      return true;\n    }))\n\n    setTomorrowTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        const ret = delta == 1;\n        if (ret) {\n          todo.completed = false;\n        }\n        return ret;\n      }\n    }))\n\n\n    setNextWeekTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        const ret = delta > 1 && delta <= 7;\n        if (ret) {\n          todo.completed = false;\n        }\n        return ret;\n      }\n    }))\n\n    setLaterTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        const ret = delta > 7;\n        if (ret) {\n          todo.completed = false;\n        }\n        return ret;\n      }\n    }))\n    \n  };\n\n  const todosStatistics = () => { \n    todos.forEach(todo => {\n    if (todo.date) {\n      if (!todo.completed) {\n        setUncompletedTodos(uncompletedTodos => [...uncompletedTodos, todo.date]);\n      }\n    }\n    })\n  };\n\n  useEffect(() => { \n    getLocalTodos();\n    /*todosStatistics()*/\n  }, []);\n\n  useEffect(() => {\n    // filterHandler();\n    saveLocalTodos();\n    filterTodos();\n    todosStatistics()\n  }, [todos, filter]);\n\n  /*const filterHandler = () => {\n    switch(filter) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };*/\n\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todosLocal = JSON.parse(localStorage.getItem('todos'));\n      todosLocal.forEach(todo => {\n        if (todo.date) {\n          todo.date = new Date(todo.date)\n        }\n      });\n      setTodos(todosLocal)\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n\n        <Switch>\n\n          <Route path='/statistics'>\n            <Statistics\n            uncompletedTodos={uncompletedTodos} \n            />\n          </Route>\n\n\n          <Route path='/'>\n            <AddTaskPanel\n            inputText={inputText}\n            setInputText={setInputText}\n            todos={todos}\n            setTodos={setTodos}\n            setFilter={setFilter}\n            />\n\n            <TodosSection\n              title=\"СЕГОДНЯ\"\n              todos={todos}\n              filteredTodos={todayTodos}\n              setTodos={setTodos}\n            />\n            <TodosSection\n              title=\"ЗАВТРА\"\n              todos={todos}\n              filteredTodos={tomorrowTodos}\n              setTodos={setTodos}\n              disabled={true}\n            />\n            <TodosSection\n              title=\"НА НЕДЕЛЕ\"\n              todos={todos}\n              filteredTodos={nextWeekTodos}\n              setTodos={setTodos}\n              disabled={true}\n            />\n            <TodosSection\n              title=\"ПОЗЖЕ\"\n              todos={todos}\n              filteredTodos={laterTodos}\n              setTodos={setTodos}\n              disabled={true}\n            />\n            </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["102","103"],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\AddTaskPanel.js",["104"],"import React, { useState } from 'react'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport NewTaskForm from './NewTaskForm'\r\nimport RegularTaskForm from './RegularTaskForm'\r\n\r\nfunction AddTaskPanel({ inputText, setInputText, todos, setTodos, setFilter }) {\r\n    // окно выбора новой задачи\r\n    let [showPopup, setShowPopup] = useState(false);\r\n    // добавляет класс для анмации появления к popup окнам создания задачи\r\n    let [popupTaskForm, setPopupTaskForm] = useState('popupTaskFormPanel');\r\n    // let [showRegularTaskForm, setShowRegularTaskForm] = useState('newTaskFormPanel');\r\n\r\n    // 100% закрытие меню выбора задач и формы\r\n    const closePopup = () => {\r\n        setShowPopup(false);\r\n        setPopupTaskForm('popupTaskFormPanel');\r\n    }\r\n\r\n    // закрытие меню выбора задач, если оно открыто\r\n    const togglePopup = () => {\r\n        // закрываем панель добавления задачи, если она открыта\r\n        setPopupTaskForm('popupTaskFormPanel');\r\n        // \r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n\r\n    let toggleNewTaskForm = () => {\r\n        // закрываем меню выбора задачи\r\n        togglePopup();\r\n        // меняем класс\r\n        popupTaskForm === 'popupTaskFormPanel' ?\r\n        setPopupTaskForm('popupTaskFormPanel active newTaskFormPanel') : setPopupTaskForm('popupTaskFormPanel');\r\n    }\r\n\r\n    let toggleRegularTaskForm = () => {\r\n        // закрываем меню выбора задачи\r\n        togglePopup();\r\n        // меняем класс\r\n        popupTaskForm === 'popupTaskFormPanel' ?\r\n        setPopupTaskForm('popupTaskFormPanel active regularTaskFormPanel') : setPopupTaskForm('popupTaskFormPanel');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='addTaskPanel'>\r\n            <div className='addTaskPanel__container'>\r\n                <h1 className='addTask__title'>Создать</h1>\r\n                <button className='addTask__btn' onClick={togglePopup}>+</button>\r\n                {showPopup ? \r\n                    <div className='addTaskPanel__popup'>\r\n                        <li className='popup_menu'>\r\n                            <ul className='popup_element' onClick={toggleNewTaskForm}> <CheckCircleOutlineIcon className='popup_icon'/>Новая задача</ul>\r\n                            {/* <ul className='popup_element' onClick={toggleRegularTaskForm}><AdjustIcon className='popup_icon'/>Привычка</ul> */}\r\n                            <ul className='popup_element' onClick={toggleRegularTaskForm}><AutorenewIcon className='popup_icon'/>Регулярное событие</ul>\r\n                        </li>\r\n                    </div>\r\n                : ''}\r\n            </div>\r\n            <div className={popupTaskForm}>\r\n                { popupTaskForm.indexOf('newTaskForm') > -1 ?  <NewTaskForm\r\n                inputText={inputText}\r\n                setInputText={setInputText}\r\n                todos={todos}\r\n                setTodos={setTodos}\r\n                closePopup={closePopup}\r\n                /> : ''}\r\n                { popupTaskForm.indexOf('regularTaskForm') > -1 ?  <RegularTaskForm\r\n                inputText={inputText}\r\n                setInputText={setInputText}\r\n                todos={todos}\r\n                setTodos={setTodos}\r\n                closePopup={closePopup}\r\n                /> : ''}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddTaskPanel\r\n",["105","106"],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\TodosSection.js",["107"],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\NewTaskForm.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\RegularTaskForm.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\index.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Timer.js",["108","109"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer({ millis }) {\r\n    const [time, updateTime] = useState(millis - Date.parse(new Date()));\r\n\r\n    useEffect(() => {\r\n        tick();\r\n    }, [])\r\n\r\n    const tick = () => {\r\n        setInterval(() => {\r\n            let minutes = Math.floor((time / 1000 / 60) % 60) / Math.floor((time / (1000 * 60 * 60)) % 24);\r\n            console.log('вызов функции')\r\n            updateTime(time => time-60000)\r\n        }, 60000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='deadline-timer'>{Math.floor((time / (1000 * 60 * 60)) % 24)}ч.&nbsp;{Math.floor((time / 1000 / 60) % 60)}м.</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTaskForm.js",["110"],"import React, { useState, useEffect } from 'react'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nfunction SubTaskForm({ todo, todos, setTodos, subTodos, setSubTodos }) {\r\n    useEffect(() => {\r\n        setTodos(todos.map((t) => {\r\n          if (t.id === todo.id) {\r\n              return {\r\n                  ...t,\r\n                  subTodos: subTodos\r\n              }\r\n          }\r\n          return t;\r\n        }));\r\n      }, [subTodos])\r\n\r\n    /* input text */\r\n    const [inputText, setInputText] = useState('');\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitSubTodoHandler = (e) => {\r\n        /* Вносим подзадачу в список подзадач */\r\n        if (inputText !== '') {\r\n            setSubTodos([...subTodos, {text: inputText, completed: false, id: Math.random() * 1000}]);\r\n            setInputText('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='subTaskForm'>\r\n            <form className='subTaskForm-form'>\r\n                <div className='subTaskForm-row'>\r\n                    <span className='subTaskForm-title'>\r\n                        Название\r\n                    </span>\r\n                    <input className='subTaskForm-input' type='text' value={inputText} onChange={inputTextHandler}></input>\r\n                    <ArrowDownwardIcon className='subTaskForm-btn' onClick={submitSubTodoHandler} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubTaskForm\r\n","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTodoList.js",["111"],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTodoPopUp.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\SubTodo.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Header.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\Statistics.js",[],"D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\MyCalendar.js",["112","113"],"import React, { useState } from 'react'\r\n\r\nimport { getDay } from 'date-fns'\r\nimport { enGB } from 'date-fns/locale'\r\nimport { DatePickerCalendar } from 'react-nice-dates'\r\nimport 'react-nice-dates/build/style.css'\r\nimport ru from 'date-fns/locale/ru';\r\n\r\n\r\n\r\nfunction MyCalendar({uncompletedTodos}) {\r\n    const [date, setDate] = useState();\r\n\r\n    const modifiers = {\r\n        noncompl: date => {\r\n            for (let d of uncompletedTodos) {\r\n                if (date.getDate() === d.getDate() &&\r\n                date.getMonth() === d.getMonth()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    const modifiersClassNames = {\r\n        noncompl: 'noncompl'\r\n    }\r\n\r\n    return (\r\n        <div className='my-calendar'>\r\n            <div className='my-calendar__descr'>Календарь</div>\r\n            <div className='my-calendar__container'>\r\n                <DatePickerCalendar className='date-picker-calendar'\r\n                    date={date}\r\n                    onDateChange={setDate}\r\n                    locale={ru}\r\n                    modifiers={modifiers}\r\n                    modifiersClassNames={modifiersClassNames}\r\n                />\r\n            </div>\r\n            <div className='my-calendar__descr'>\r\n                <div className='descr__circle'></div>\r\n                <span className='descr__text'> - невыполненная задача</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCalendar\r\n","D:\\Программирование\\Web\\React\\todo-list-b\\src\\components\\MyStatistics.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":20,"column":60,"nodeType":"122","messageId":"123","endLine":20,"endColumn":71},{"ruleId":"124","severity":1,"message":"125","line":33,"column":22,"nodeType":"126","messageId":"127","endLine":33,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":38,"column":40,"nodeType":"130","messageId":"131","endLine":38,"endColumn":42},{"ruleId":"124","severity":1,"message":"125","line":47,"column":27,"nodeType":"126","messageId":"127","endLine":47,"endColumn":29},{"ruleId":"128","severity":1,"message":"129","line":56,"column":40,"nodeType":"130","messageId":"131","endLine":56,"endColumn":42},{"ruleId":"128","severity":1,"message":"129","line":73,"column":37,"nodeType":"130","messageId":"131","endLine":73,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":112,"column":6,"nodeType":"134","endLine":112,"endColumn":21,"suggestions":"135"},{"ruleId":"114","replacedBy":"136"},{"ruleId":"116","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":18},{"ruleId":"114","replacedBy":"142"},{"ruleId":"116","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":7,"column":24,"nodeType":"146","endLine":7,"endColumn":48},{"ruleId":"132","severity":1,"message":"147","line":8,"column":8,"nodeType":"134","endLine":8,"endColumn":10,"suggestions":"148"},{"ruleId":"138","severity":1,"message":"149","line":12,"column":17,"nodeType":"140","messageId":"141","endLine":12,"endColumn":24},{"ruleId":"132","severity":1,"message":"150","line":15,"column":10,"nodeType":"134","endLine":15,"endColumn":20,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"153","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"138","severity":1,"message":"154","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":14},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterTodos', 'saveLocalTodos', and 'todosStatistics'. Either include them or remove the dependency array.","ArrayExpression",["157"],["155"],["156"],"no-unused-vars","'AdjustIcon' is defined but never used.","Identifier","unusedVar",["155"],["156"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'tick'. Either include it or remove the dependency array.",["158"],"'minutes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setTodos', 'todo.id', and 'todos'. Either include them or remove the dependency array. If 'setTodos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],"'useEffect' is defined but never used.","'getDay' is defined but never used.","'enGB' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [todos, filter, saveLocalTodos, filterTodos, todosStatistics]",{"range":"166","text":"167"},"Update the dependencies array to be: [tick]",{"range":"168","text":"169"},"Update the dependencies array to be: [setTodos, subTodos, todo.id, todos]",{"range":"170","text":"171"},[2962,2977],"[todos, filter, saveLocalTodos, filterTodos, todosStatistics]",[208,210],"[tick]",[451,461],"[setTodos, subTodos, todo.id, todos]"]