{"version":3,"sources":["components/NewTaskForm.js","components/RegularTaskForm.js","components/AddTaskPanel.js","components/TimePopUp.js","components/Timer.js","components/SubTaskForm.js","components/SubTodo.js","components/SubTodoList.js","components/SubTodoPopUp.js","components/Todo.js","components/TodoList.js","components/TodosSection.js","components/Header.js","components/MyCalendar.js","components/MyStatistics.js","components/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["NewTaskForm","inputText","setInputText","todos","setTodos","closePopup","useState","dataCheck","setDataCheck","dayInput","setDayInput","monthInput","setMonthInput","yearInput","setYearInput","className","value","onChange","e","target","type","checked","onClick","preventDefault","d","Date","text","completed","id","Math","random","date","RegularTaskForm","radioState","setRadioState","curDate","setHours","setMinutes","setSeconds","setMilliseconds","regular","AddTaskPanel","setFilter","showPopup","setShowPopup","popupTaskForm","setPopupTaskForm","togglePopup","indexOf","TimePopUp","todo","setTimePopUp","setDate","millis","parse","map","item","timer","Timer","time","updateTime","useEffect","tick","setInterval","floor","console","log","SubTaskForm","subTodos","setSubTodos","t","SubTodo","subTodo","filter","SubTodoList","length","SubTodoPopUp","Todo","filteredTodos","disabled","subWindow","setSubWindow","timePopUp","subInitState","subTodosCount","getDate","setMonth","getMonth","htmlFor","counter","forEach","sub","completeSubTodos","TodoList","TodosSection","title","Header","href","MyCalendar","uncompletedTodos","modifiers","noncompl","onDateChange","locale","ru","modifiersClassNames","MyStatistics","Statistics","dir","App","todayTodos","setTodayTodos","tomorrowTodos","setTomorrowTodos","nextWeekTodos","setNextWeekTodos","laterTodos","setLaterTodos","Array","setUncompletedTodos","getLocalTodos","saveLocalTodos","d2","d1","ret","delta","localStorage","setItem","JSON","stringify","getItem","todosLocal","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa967b6b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction NewTaskForm({ inputText, setInputText, todos, setTodos, closePopup }) {\r\n    const [dataCheck, setDataCheck] = useState('');\r\n    /* назначенный день */\r\n    const [dayInput, setDayInput] = useState('');\r\n    /* назначенный день */\r\n    const [monthInput, setMonthInput] = useState('');\r\n    /* назначенный год */\r\n    const [yearInput, setYearInput] = useState('');\r\n    \r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        if (inputText !== '') {\r\n            setInputText(\"\");\r\n            if (dataCheck === 'active') {\r\n                let d = new Date(yearInput, monthInput-1, dayInput, 2, 0, 0, 0);\r\n                setTodos([...todos, {text: inputText, completed: false, id: Math.random() * 1000, date: d,\r\n                }]);\r\n            } else {\r\n                setTodos([...todos, {text: inputText, completed: false, id: Math.random() * 1000\r\n            }]);\r\n            }\r\n        }\r\n        closePopup();\r\n    }\r\n\r\n    \r\n    const dataCheckboxHandler = (e) => {\r\n        if (e.target.checked) {\r\n            setDataCheck('active')\r\n        } else {\r\n            setDataCheck('')\r\n        }\r\n    } \r\n\r\n    const inputDayHandler = (e) => {\r\n        setDayInput(e.target.value)\r\n    }\r\n    const inputMonthHandler = (e) => {\r\n        setMonthInput(e.target.value)\r\n    }\r\n    const inputYearHandler = (e) => {\r\n        setYearInput(e.target.value)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='newTaskForm'>\r\n            {/* <div className='newTaskForm__container form-container'> */}\r\n            <form className='newTask__form todo-form'>\r\n                <div className='form-text'>\r\n                    <div className='form-title'>Новая задача</div> \r\n                </div>\r\n                <input\r\n                value={inputText}\r\n                onChange={inputTextHandler}\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                />\r\n\r\n                {/* Назначение даты */}\r\n                <div className='form-date'>\r\n                    <div className='form-descr'>Назначить дату</div>\r\n                    <input className='form-check' type='checkbox' onChange={dataCheckboxHandler}></input>\r\n                    <div className={`form-date-container ${dataCheck}`}>\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"form-date-input\"\r\n                        onChange={inputDayHandler}\r\n                        />\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"form-date-input\"\r\n                        onChange={inputMonthHandler}\r\n                        />\r\n                        <input\r\n                        type=\"text\"\r\n                        className=\"form-date-input\"\r\n                        onChange={inputYearHandler}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n\r\n\r\n                <button\r\n                onClick={submitTodoHandler}\r\n                className=\"form-button\"\r\n                type=\"submit\"\r\n                >\r\n                Добавить\r\n                </button>\r\n\r\n\r\n                <CloseIcon\r\n                onClick={closePopup}\r\n                className=\"close-button\"\r\n                >\r\n                </CloseIcon>\r\n            </form>\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewTaskForm\r\n","import React, { useState } from 'react'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction RegularTaskForm({ inputText, setInputText, todos, setTodos, closePopup }) {\r\n\r\n    // состояние для радио-баттонов\r\n    let [radioState, setRadioState] = useState(1);\r\n\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        if (inputText !== '') {\r\n            let curDate = new Date();\r\n            curDate.setHours(2);\r\n            curDate.setMinutes(0);\r\n            curDate.setSeconds(0);\r\n            curDate.setMilliseconds(0);\r\n            setTodos([...todos, {text: inputText, completed: false, id: Math.random() * 1000, regular: radioState, date: curDate,\r\n            }]);\r\n            setInputText(\"\");\r\n        }\r\n        closePopup();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='regularTaskForm'>\r\n            <form className='regularTaskForm__form todo-form'>\r\n                <div className='form-tеxt'>\r\n                    <div className=\"form-title\">Регулярная задача</div>\r\n                </div>\r\n                \r\n                <input\r\n                value={inputText}\r\n                onChange={inputTextHandler}\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                />\r\n                \r\n                <div className='form-tеxt'>\r\n                    <div className=\"form-title\">Выполнять эту задачу</div>\r\n                </div>\r\n\r\n                <div className='form-radio'>\r\n                    <div className={radioState === 1 ? 'radio-btn active' : 'radio-btn'} onClick={() => setRadioState(1)}>\r\n                        Ежедневно\r\n                    </div>\r\n                    <div className={radioState === 2 ? 'radio-btn active' : 'radio-btn'} onClick={() => setRadioState(2)}>\r\n                        Каждую неделю\r\n                    </div>\r\n                    <div className={radioState === 3 ? 'radio-btn active' : 'radio-btn'} onClick={() => setRadioState(3)}>\r\n                        Каждый месяц\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <button\r\n                onClick={submitTodoHandler}\r\n                className=\"form-button\"\r\n                type=\"submit\"\r\n                >Добавить</button>\r\n\r\n                \r\n\r\n\r\n\r\n\r\n                {/* Крестик закрытия формы (absolute) */}\r\n                <CloseIcon\r\n                onClick={closePopup}\r\n                className=\"close-button\"\r\n                >\r\n                </CloseIcon>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegularTaskForm\r\n","import React, { useState } from 'react'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport NewTaskForm from './NewTaskForm'\r\nimport RegularTaskForm from './RegularTaskForm'\r\n\r\nfunction AddTaskPanel({ inputText, setInputText, todos, setTodos, setFilter }) {\r\n    // окно выбора новой задачи\r\n    let [showPopup, setShowPopup] = useState(false);\r\n    // добавляет класс для анмации появления к popup окнам создания задачи\r\n    let [popupTaskForm, setPopupTaskForm] = useState('popupTaskFormPanel');\r\n    // let [showRegularTaskForm, setShowRegularTaskForm] = useState('newTaskFormPanel');\r\n\r\n    // 100% закрытие меню выбора задач и формы\r\n    const closePopup = () => {\r\n        setShowPopup(false);\r\n        setPopupTaskForm('popupTaskFormPanel');\r\n    }\r\n\r\n    // закрытие меню выбора задач, если оно открыто\r\n    const togglePopup = () => {\r\n        // закрываем панель добавления задачи, если она открыта\r\n        setPopupTaskForm('popupTaskFormPanel');\r\n        // \r\n        setShowPopup(!showPopup);\r\n    }\r\n\r\n\r\n    let toggleNewTaskForm = () => {\r\n        // закрываем меню выбора задачи\r\n        togglePopup();\r\n        // меняем класс\r\n        popupTaskForm === 'popupTaskFormPanel' ?\r\n        setPopupTaskForm('popupTaskFormPanel active newTaskFormPanel') : setPopupTaskForm('popupTaskFormPanel');\r\n    }\r\n\r\n    let toggleRegularTaskForm = () => {\r\n        // закрываем меню выбора задачи\r\n        togglePopup();\r\n        // меняем класс\r\n        popupTaskForm === 'popupTaskFormPanel' ?\r\n        setPopupTaskForm('popupTaskFormPanel active regularTaskFormPanel') : setPopupTaskForm('popupTaskFormPanel');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='addTaskPanel'>\r\n            <div className='addTaskPanel__container'>\r\n                <h1 className='addTask__title'>Создать</h1>\r\n                <button className='addTask__btn' onClick={togglePopup}>+</button>\r\n                {showPopup ? \r\n                    <div className='addTaskPanel__popup'>\r\n                        <li className='popup_menu'>\r\n                            <ul className='popup_element' onClick={toggleNewTaskForm}> <CheckCircleOutlineIcon className='popup_icon'/>Новая задача</ul>\r\n                            {/* <ul className='popup_element' onClick={toggleRegularTaskForm}><AdjustIcon className='popup_icon'/>Привычка</ul> */}\r\n                            <ul className='popup_element' onClick={toggleRegularTaskForm}><AutorenewIcon className='popup_icon'/>Регулярное событие</ul>\r\n                        </li>\r\n                    </div>\r\n                : ''}\r\n            </div>\r\n            <div className={popupTaskForm}>\r\n                { popupTaskForm.indexOf('newTaskForm') > -1 ?  <NewTaskForm\r\n                inputText={inputText}\r\n                setInputText={setInputText}\r\n                todos={todos}\r\n                setTodos={setTodos}\r\n                closePopup={closePopup}\r\n                /> : ''}\r\n                { popupTaskForm.indexOf('regularTaskForm') > -1 ?  <RegularTaskForm\r\n                inputText={inputText}\r\n                setInputText={setInputText}\r\n                todos={todos}\r\n                setTodos={setTodos}\r\n                closePopup={closePopup}\r\n                /> : ''}\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddTaskPanel\r\n","import React, { useState } from 'react'\r\n\r\nconst TimePopUp = ({ todo, todos, setTodos, setTimePopUp }) => {\r\n\r\n  let [date, setDate] = useState(''); \r\n\r\n  const dateHandler = (e) => {\r\n    setDate(e.target.value);\r\n  }\r\n\r\n  const setDeadline = () => {\r\n    /* закрываем окно настройки дедлайна */\r\n    setTimePopUp();\r\n    /* получаем время */\r\n    /*let year = date.substr(0, 4);\r\n    let month = date.substr(5, 2);\r\n    let day = date.substr(8, 2);\r\n    let hours = date.substr(11, 2);\r\n    let minutes = date.substr(14, 2);*/\r\n\r\n    /* получаем время дедлайна в миллисекундах */\r\n    let millis = Date.parse(date);\r\n\r\n    setTodos(todos.map(item =>{\r\n      if (item.id === todo.id) {\r\n        return {\r\n            ...item, \r\n            timer: millis\r\n        }\r\n      }\r\n      return item;\r\n    }))\r\n\r\n  } \r\n\r\n\r\n  const deleteDeadline = () => {\r\n    /* закрываем окно настройки дедлайна */\r\n    setTimePopUp();\r\n    \r\n    setTodos(todos.map(item =>{\r\n      if (item.id === todo.id) {\r\n        if (todo.timer) {\r\n          delete todo.timer\r\n        }\r\n      }\r\n      return item;\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"timePopUp\">\r\n      <div className=\"timePopUp__container\">\r\n        <label className=\"deadline__descr\">Сделать до...</label>\r\n        <input type=\"datetime-local\" className=\"deadline__input\" value={date} onChange={dateHandler} />\r\n        <div className=\"deadline__btn\" onClick={setDeadline} >\r\n            Ок\r\n        </div>\r\n        <div className=\"deadline__del\" onClick={deleteDeadline} >\r\n            Сбросить\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimePopUp;","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Timer({ millis }) {\r\n    const [time, updateTime] = useState(millis - Date.parse(new Date()));\r\n\r\n    useEffect(() => {\r\n        tick();\r\n    }, [])\r\n\r\n    const tick = () => {\r\n        setInterval(() => {\r\n            let minutes = Math.floor((time / 1000 / 60) % 60) / Math.floor((time / (1000 * 60 * 60)) % 24);\r\n            console.log('вызов функции')\r\n            updateTime(time => time-60000)\r\n        }, 60000)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='deadline-timer'>{Math.floor((time / (1000 * 60 * 60)) % 24)}ч.&nbsp;{Math.floor((time / 1000 / 60) % 60)}м.</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React, { useState, useEffect } from 'react'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nfunction SubTaskForm({ todo, todos, setTodos, subTodos, setSubTodos }) {\r\n    useEffect(() => {\r\n        setTodos(todos.map((t) => {\r\n          if (t.id === todo.id) {\r\n              return {\r\n                  ...t,\r\n                  subTodos: subTodos\r\n              }\r\n          }\r\n          return t;\r\n        }));\r\n      }, [subTodos])\r\n\r\n    /* input text */\r\n    const [inputText, setInputText] = useState('');\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n    const submitSubTodoHandler = (e) => {\r\n        /* Вносим подзадачу в список подзадач */\r\n        if (inputText !== '') {\r\n            setSubTodos([...subTodos, {text: inputText, completed: false, id: Math.random() * 1000}]);\r\n            setInputText('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='subTaskForm'>\r\n            <form className='subTaskForm-form'>\r\n                <div className='subTaskForm-row'>\r\n                    <span className='subTaskForm-title'>\r\n                        Название\r\n                    </span>\r\n                    <input className='subTaskForm-input' type='text' value={inputText} onChange={inputTextHandler}></input>\r\n                    <ArrowDownwardIcon className='subTaskForm-btn' onClick={submitSubTodoHandler} />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubTaskForm\r\n","import React from 'react'\r\n\r\nfunction SubTodo({text, subTodo, subTodos, setSubTodos}) {\r\n    /* удаление задачи */\r\n    const deleteHandler = () => {\r\n        setSubTodos(subTodos.filter(item => item.id !== subTodo.id))\r\n    }\r\n    /* выполнение задачи */\r\n    const completeTodos = () => {\r\n        setSubTodos(subTodos.map(item =>{\r\n            if (item.id === subTodo.id) {\r\n              return {\r\n                  ...item, \r\n                  completed: !item.completed\r\n              }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return (\r\n        <div className='subTodo'>\r\n            <li className={`todo__item ${subTodo.completed ? \"completed\" : \"\"}`}>\r\n                {text}\r\n            </li>\r\n            <div className='todo-buttons'>\r\n                {/* Выполнить */}\r\n                <button onClick={completeTodos} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                {/* Удалить */}\r\n                <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubTodo\r\n","import React, { useEffect } from 'react'\r\nimport SubTodo from './SubTodo'\r\n\r\nfunction SubTodoList({ subTodos, setSubTodos }) {\r\n    \r\n    return (\r\n        <div className='subTodoList'>\r\n            <ul className='subTodo__container'>\r\n            {subTodos.length > 0 ? subTodos.map((subTodo) => (\r\n                <SubTodo\r\n                text={subTodo.text}\r\n                key={subTodo.id}\r\n                subTodo={subTodo}\r\n                subTodos={subTodos}\r\n                setSubTodos={setSubTodos}\r\n                />\r\n            )) : ''}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubTodoList\r\n","import React from 'react'\r\nimport SubTaskForm from './SubTaskForm'\r\nimport SubTodoList from './SubTodoList'\r\n\r\nfunction SubTodoPopUp({ todo, todos, setTodos, subTodos, setSubTodos }) {\r\n    return (\r\n        <div className='subPopup'>\r\n            <div className='subPopup__container'>\r\n                <div className='sub-title'>Добавить подзадачу</div>\r\n                <SubTaskForm todo={todo} todos={todos} setTodos={setTodos} subTodos={subTodos} setSubTodos={setSubTodos} />\r\n                <div className='sub-title'>Список подзадач</div>\r\n                { subTodos.length > 0 ? <SubTodoList todo={todo} todos={todos} setTodos={setTodos} subTodos={subTodos} setSubTodos={setSubTodos} /> : <div className='sub-title-list'>*Список пуст*</div> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubTodoPopUp\r\n","import React, { useState } from 'react'\r\nimport TimePopUp from './TimePopUp';\r\nimport Timer from './Timer'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport SubTodoPopUp from './SubTodoPopUp'\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\nconst Todo = ({ text, todo, todos, filteredTodos, setTodos, disabled }) => {\r\n    /* окно добавления подзадач */\r\n    const [subWindow, setSubWindow] = useState(false);\r\n    /* меню установки дедлайна */\r\n    const [timePopUp, setTimePopUp] = useState(false);\r\n    /* получаем список подзадач, если он есть */\r\n    const subInitState = todo.subTodos ? todo.subTodos : [];\r\n    /* список подзадач */\r\n    const [subTodos, setSubTodos] = useState(subInitState);\r\n    /* общее число подзадач */\r\n    let subTodosCount = subTodos.length;\r\n    /* число выполненных подзадач */\r\n    let completeSubTodos = () => {\r\n      let counter = 0;\r\n      subTodos.forEach(sub => {\r\n        if (sub.completed) {\r\n          counter++;\r\n        }\r\n      })\r\n      return counter;\r\n    }\r\n\r\n    /* удаление задачи */\r\n    const deleteHandler = () => {\r\n      setTodos(todos.filter(item => item.id !== todo.id));\r\n    }\r\n    /* выполнение задачи */\r\n    const completeTodos = () => {\r\n        setTodos(todos.map(item =>{\r\n            if (item.id === todo.id) {\r\n              /* если регулярная задача, то перенести на другое время */\r\n              if (item.regular) {\r\n                let d = item.date.getDate();\r\n                  switch(item.regular) {\r\n                    case 1:\r\n                      item.date.setDate(d + 1);\r\n                      break;\r\n                    case 2:\r\n                      item.date.setDate(d + 7);\r\n                      break;\r\n                    case 3:\r\n                      item.date.setMonth(item.date.getMonth() + 1);\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n              }\r\n              return {\r\n                  ...item, \r\n                  completed: !item.completed\r\n              }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    /* показ/скрытие окна назначения дедлайна */\r\n    const timePopUpHandler = (e) => {\r\n      setTimePopUp(!timePopUp);\r\n    }\r\n\r\n    /* показ/скрытие окна добавления подзадач */\r\n    const subPopUpHandler = () => {\r\n        setSubWindow(!subWindow);\r\n    }\r\n\r\n    return (\r\n      <div className={`todo ${todo.regular ? \"reg\" : \"\"}`}>\r\n        \r\n        <div className='todo__left'>\r\n          {/* Выполнить */}\r\n          <input className='todo__complete' onChange={completeTodos} type='checkbox' id={`cmp${todo.id}`} checked={todo.completed}></input>\r\n          <label htmlFor={`cmp${todo.id}`} />\r\n\r\n          {/* Текст */}\r\n          <li className={`todo__item ${todo.completed ? \"completed\" : \"\"}`}>\r\n            {text}\r\n          </li>\r\n          \r\n          {/* Значек повтора, если регулярная задача */}\r\n          {todo.regular > 0 ? <ReplayIcon className='replay__icon' /> : '' }\r\n        </div>\r\n\r\n           \r\n\r\n        <div className='todo-buttons'>\r\n          {/* Список подзадач */}\r\n          <div className='subList-container'>\r\n            <FormatListBulletedIcon className='sub-list' onClick={subPopUpHandler}/>\r\n            {subTodos.length > 0 ? <div className='subList-nums'>{completeSubTodos()}/{subTodosCount}</div> : ''} \r\n          </div>\r\n\r\n          {/* Удалить */}\r\n          <DeleteIcon className='todo__delete' onClick={deleteHandler}/>\r\n\r\n          {/* Таймер */}\r\n          <div className='deadline-container'>\r\n            <TimerIcon onClick={timePopUpHandler} className=\"time-btn\" />\r\n            { todo.timer ? <Timer millis={todo.timer} /> : \"\"\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        {/* Окно назначения даты дедлайна */}\r\n        {timePopUp ? <TimePopUp todo={todo} todos={todos} setTodos={setTodos}  setTimePopUp={setTimePopUp} /> : \"\"}\r\n\r\n        {/* Окно списка подзадач */}\r\n        {subWindow ? \r\n          <SubTodoPopUp todo={todo} todos={todos} setTodos={setTodos} subTodos={subTodos} setSubTodos={setSubTodos} \r\n          />\r\n        : ''\r\n        }\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\n\r\nconst TodoList = ({ todos, filteredTodos, setTodos, disabled }) => {\r\n    return (\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {filteredTodos.length > 0 ? filteredTodos.map((todo) => (\r\n            <Todo\r\n              text={todo.text}\r\n              key={todo.id}\r\n              todo={todo}\r\n              todos={todos}\r\n              filteredTodos={filteredTodos}\r\n              setTodos={setTodos}\r\n              disabled={disabled}\r\n            />\r\n          )) : <div className='todo-none'>*Нет задач*</div>  }\r\n        </ul>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport TodoList from './TodoList'\r\n\r\n\r\nfunction TodosSection({ title, todos, filteredTodos, setTodos, disabled = false }) {\r\n    return (\r\n        <div className className='todosSection'>\r\n            <h1 className='todosSection__title'>{title}</h1>\r\n            {todos == null ? '' : \r\n                <TodoList\r\n                    todos={todos}\r\n                    filteredTodos={filteredTodos}\r\n                    setTodos={setTodos}\r\n                    disabled={disabled}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodosSection\r\n","import React from 'react'\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport FilterHdrIcon from '@material-ui/icons/FilterHdr';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header'>\r\n            <div className='header__contasiner'>\r\n                <div className='header__categories'>\r\n                    <a className='category' href='/'>\r\n                        <TodayIcon className='category__icon' />\r\n                        Задачи\r\n                    </a>\r\n                    <a className='category' href='/challenges'>\r\n                        <FilterHdrIcon className='category__icon' />\r\n                        Челленджи\r\n                    </a>\r\n                    <a className='category main' href='/'>\r\n                        <span>TO</span>\r\n                        <FormatListBulletedIcon className='main__icon'/>\r\n                        <span>DO</span>\r\n                    </a>\r\n                    <a className='category' href='/progress'>\r\n                        <DirectionsRunIcon className='category__icon' />\r\n                        Прогресс\r\n                    </a>\r\n                    <a className='category' href='/statistics'>\r\n                        <EqualizerIcon className='category__icon' />\r\n                        Статистика\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\n\r\nimport { getDay } from 'date-fns'\r\nimport { enGB } from 'date-fns/locale'\r\nimport { DatePickerCalendar } from 'react-nice-dates'\r\nimport 'react-nice-dates/build/style.css'\r\nimport ru from 'date-fns/locale/ru';\r\n\r\n\r\n\r\nfunction MyCalendar({uncompletedTodos}) {\r\n    const [date, setDate] = useState();\r\n\r\n    const modifiers = {\r\n        noncompl: date => {\r\n            for (let d of uncompletedTodos) {\r\n                if (date.getDate() === d.getDate() &&\r\n                date.getMonth() === d.getMonth()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    const modifiersClassNames = {\r\n        noncompl: 'noncompl'\r\n    }\r\n\r\n    return (\r\n        <div className='my-calendar'>\r\n            <div className='my-calendar__descr'>Календарь</div>\r\n            <div className='my-calendar__container'>\r\n                <DatePickerCalendar className='date-picker-calendar'\r\n                    date={date}\r\n                    onDateChange={setDate}\r\n                    locale={ru}\r\n                    modifiers={modifiers}\r\n                    modifiersClassNames={modifiersClassNames}\r\n                />\r\n            </div>\r\n            <div className='my-calendar__descr'>\r\n                <div className='descr__circle'></div>\r\n                <span className='descr__text'> - невыполненная задача</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCalendar\r\n","import React from 'react'\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\n\r\nfunction MyStatistics() {\r\n    return (\r\n        <div className='my-statistics'>\r\n            <div className='myStatistics__descr'>Статистика</div>\r\n            <div className='myStatistics__rate'>Вы продуктивнее остальных пользователей на 49%!</div>\r\n            <div className='myStatistics__block'>\r\n                <DoneIcon className='block__icon done__icon' />\r\n                <div className='block__title'>Всего задач выполнено - </div>\r\n                <div className='block__stats'>1</div>\r\n            </div>\r\n            <div className='myStatistics__block'>\r\n                <DateRangeIcon className='block__icon  date__icon' />\r\n                <div className='block__title'>Выполнено за последние 7 дней - </div>\r\n                <div className='block__stats'>5</div>\r\n            </div>\r\n            <div className='myStatistics__block'>\r\n                <BarChartIcon className='block__icon stat__icon' />\r\n                <div className='block__title'>В среднем за день - </div>\r\n                <div className='block__stats'>5</div>\r\n            </div>\r\n            <div className='myStatistics__block'>\r\n                <SchoolIcon className='block__icon exp__icon' />\r\n                <div className='block__title'>Опыт - </div>\r\n                <div className='block__stats'>5</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyStatistics\r\n","import React from 'react'\r\nimport MyCalendar from './MyCalendar'\r\nimport MyStatistics from './MyStatistics'\r\n\r\nfunction Statistics({uncompletedTodos}) {\r\n    \r\n    console.dir(uncompletedTodos);\r\n    return (\r\n        <div className='statistics'>\r\n            <div className='statistics__container'>\r\n                <MyCalendar \r\n                uncompletedTodos={uncompletedTodos}\r\n                />\r\n                <MyStatistics />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics\r\n","import React, { useState, useEffect } from \"react\"\nimport './App.css';\nimport AddTaskPanel from './components/AddTaskPanel'\nimport TodosSection from \"./components/TodosSection\";\nimport Header from './components/Header'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Statistics from './components/Statistics'\n\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  // const [filteredTodos, setFilteredTodos] = useState([]);\n  const [todayTodos, setTodayTodos] = useState([]);\n  const [tomorrowTodos, setTomorrowTodos] = useState([]);\n  const [nextWeekTodos, setNextWeekTodos] = useState([]);\n  const [laterTodos, setLaterTodos] = useState([]);\n\n  const [uncompletedTodos, setUncompletedTodos] = useState(new Array());\n\n  const filterTodos = () => {\n\n    setTodayTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        return delta == 0;\n      }\n      return true;\n    }))\n\n    setTomorrowTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        const ret = delta == 1;\n        if (ret) {\n          todo.completed = false;\n        }\n        return ret;\n      }\n    }))\n\n\n    setNextWeekTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        const ret = delta > 1 && delta <= 7;\n        if (ret) {\n          todo.completed = false;\n        }\n        return ret;\n      }\n    }))\n\n    setLaterTodos(todos.filter(todo => {\n      if (todo.date) {\n        let d2 = new Date(todo.date);\n        let d1 = new Date();\n        d1.setHours(2);\n        d1.setMinutes(0);\n        d1.setSeconds(0);\n        d1.setMilliseconds(0);\n        let delta = (d2 - d1) / (60 * 60 * 24 * 1000);\n        const ret = delta > 7;\n        if (ret) {\n          todo.completed = false;\n        }\n        return ret;\n      }\n    }))\n    \n  };\n\n  const todosStatistics = () => { \n    todos.forEach(todo => {\n    if (todo.date) {\n      if (!todo.completed) {\n        setUncompletedTodos(uncompletedTodos => [...uncompletedTodos, todo.date]);\n      }\n    }\n    })\n  };\n\n  useEffect(() => { \n    getLocalTodos();\n    /*todosStatistics()*/\n  }, []);\n\n  useEffect(() => {\n    // filterHandler();\n    saveLocalTodos();\n    filterTodos();\n    todosStatistics()\n  }, [todos, filter]);\n\n  /*const filterHandler = () => {\n    switch(filter) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };*/\n\n  const saveLocalTodos = () => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todosLocal = JSON.parse(localStorage.getItem('todos'));\n      todosLocal.forEach(todo => {\n        if (todo.date) {\n          todo.date = new Date(todo.date)\n        }\n      });\n      setTodos(todosLocal)\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n\n        <Switch>\n\n          <Route path='/statistics'>\n            <Statistics\n            uncompletedTodos={uncompletedTodos} \n            />\n          </Route>\n\n\n          <Route path='/'>\n            <AddTaskPanel\n            inputText={inputText}\n            setInputText={setInputText}\n            todos={todos}\n            setTodos={setTodos}\n            setFilter={setFilter}\n            />\n\n            <TodosSection\n              title=\"СЕГОДНЯ\"\n              todos={todos}\n              filteredTodos={todayTodos}\n              setTodos={setTodos}\n            />\n            <TodosSection\n              title=\"ЗАВТРА\"\n              todos={todos}\n              filteredTodos={tomorrowTodos}\n              setTodos={setTodos}\n              disabled={true}\n            />\n            <TodosSection\n              title=\"НА НЕДЕЛЕ\"\n              todos={todos}\n              filteredTodos={nextWeekTodos}\n              setTodos={setTodos}\n              disabled={true}\n            />\n            <TodosSection\n              title=\"ПОЗЖЕ\"\n              todos={todos}\n              filteredTodos={laterTodos}\n              setTodos={setTodos}\n              disabled={true}\n            />\n            </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}